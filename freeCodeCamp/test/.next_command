ls --color=auto
cd ../../..
ls --color=auto
mv header.png client/assets/images
find header.png
find -name header.png
find -name footer.jpeg
mv footer.jpeg client/assets/images
mv images/footer.jpeg client/assets/images
find
rmdir images
rm images/background.jpg
__vsc_prompt_cmd_original
rmdir images
__vsc_prompt_cmd_original
ls --color=auto
mkdir client/assets
mkdir icons client/assets
mkdir client/assets/icons
mv CodeAlly.svg client/assets/icons
find
mv CodeRoad.svg client/assets/icons
mv freeCodeCamp.svg client/assets/icons
find
mkdir client/assets/fonts
__vsc_prompt_cmd_original
touch client/assets/fonts roboto-bold.woff
find
touch client/assets/fonts/roboto-bold.woff
touch client/assets/fonts/roboto-light.woff
find -name client/assets/fonts
find client/assets/fonts
touch client/assets/fonts/lato-bold.ttf
touch client/assets/fonts/lato-light.ttf
find
rm --help
rm -r
rm -r fonts
ls --color=auto
rm roboto-bold.woff
ls --color=auto
touch package.json
touch server.js
touch README.md
ls --color=auto
echo Yay!
echo I finished the boilerplate!
echo one more thing...
echo I made this boilerplate >> README.md
more README.md
echo from the command line >> README.md
__vsc_prompt_cmd_original
more README.md
echo for the freeCodeCamp bash lessons >> README.md
more README.md
cd project
cd../../../
cd ../../..
ls --color=auto
cd workspace
ls --color=auto
cd project
ls --color=auto
mv website website-boilerplate
ls --color=auto
cp --help
cp -r website-boilerplate toms-website
ls --color=auto
find
find toms-website
find website-boilerplate
clear
echo goodbye terminal
exit
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
git init
git remote add origin https://github.com/agentNavi0893/learn-bash-boilerplate.git
git status
git add .
git commit -m "done!"
git push origin main
git clone https://github.com/agentNavi0893/learn-bash-by-building-a-boilerplate.git
git remote add origin https://github.com/agentNavi0893/learn-bash-boilerplate.git
git add.
git add .
git commit -m "done"
__vsc_prompt_cmd_original
git push -u origin main
git remote -v
git remote set-url origin https://github.com/agentNavi0893/learn-bash-boilerplate.git
git push origin main
git remote set-url origin https://github.com/agentNavi0893/learn-bash-boilerplate.gt
git push origin main
git push origin main
git remote set-url origin https://github.com/agentNavi0893/learn-bash-boilerplate.git
git push origin main
git push origin main
echo "# learn-bash-boilerplate" >> README.md
git init
git add README.md
git add .
